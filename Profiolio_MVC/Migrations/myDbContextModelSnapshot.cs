// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Profiolio_MVC.Data;

#nullable disable

namespace ProfiolioMVC.Migrations
{
    [DbContext(typeof(myDbContext))]
    partial class myDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Profiolio_MVC.Models.SettingsNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Key");

                    b.ToTable("settingsNumbers");
                });

            modelBuilder.Entity("Profiolio_MVC.Models.ViewerCounting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FirstViewing")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCurrentViewing")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastViewing")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("viewerCountings");
                });

            modelBuilder.Entity("Profiolio_MVC.Models.ViewerLoggin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientIp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LogginTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Note2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Note3")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ViewerCountingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ViewerCountingId");

                    b.ToTable("ViewerLoggin");
                });

            modelBuilder.Entity("Profiolio_MVC.Models.ViewerLoggin", b =>
                {
                    b.HasOne("Profiolio_MVC.Models.ViewerCounting", "viewerCounting")
                        .WithMany("ViewerLoggins")
                        .HasForeignKey("ViewerCountingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("viewerCounting");
                });

            modelBuilder.Entity("Profiolio_MVC.Models.ViewerCounting", b =>
                {
                    b.Navigation("ViewerLoggins");
                });
#pragma warning restore 612, 618
        }
    }
}
